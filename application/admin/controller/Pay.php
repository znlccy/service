<?php

namespace app\admin\controller;

use think\Controller;
use think\Request;
use Pingpp\Pingpp;
use app\admin\model\RecOrder;
use app\admin\model\IncidentalOrder;

class Pay extends Controller
{
    protected $app_id;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        \Pingpp\Pingpp::setApiKey('sk_test_DejXjD9Gqj5KHifDWDKCynHC');
        \Pingpp\Pingpp::setPrivateKeyPath(PUBLIC_PATH . '/your_rsa_private_key.pem');
        $this->app_id = config('app.pay.app_id');
    }

    /**
     * 创建charge支付.
     *
     * @return \think\Response
     */
    public function create()
    {
        try {
            $ch = \Pingpp\Charge::create(
//                array(
//                    "amount" => 100,
//                    "app" => 'app_Lij9KOXDa18OGG08',
//                    "merchant_order_no" => "88888888888", //商户订单号
//                    "subject" => "Your Subject",
//                    "currency" => "cny",
//                    "body" => "Your Body",
//                    "uid" => "test_user_001",
//                    "client_ip" => $_SERVER['REMOTE_ADDR']
//                )
                array(
                    // 请求参数字段规则，请参考 API 文档：https://www.pingxx.com/api#api-c-new
                    'subject'   => 'Your Subject',
                    'body'      => 'Your Body',
                    'amount'    => 1,                 // 订单总金额, 人民币单位：分（如订单总金额为 1 元，此处请填 100）
                    'order_no'  => '123456789',                // 推荐使用 8-20 位，要求数字或字母，不允许其他字符
                    'currency'  => 'cny',
                    'channel'   => 'alipay_qr',                // 支付使用的第三方支付渠道取值，请参考：https://www.pingxx.com/api#api-c-new
                    'client_ip' => $_SERVER['REMOTE_ADDR'], // 发起支付请求客户端的 IP 地址，格式为 IPV4，如: 127.0.0.1
                    'app'       => array('id' => 'app_Lij9KOXDa18OGG08')
                )
            );
            echo $ch;                                       // 输出 Ping++ 返回的支付凭据 Charge
        } catch (\Pingpp\Error\Base $e) {
            // 捕获报错信息
            if ($e->getHttpStatus() != null) {
                header('Status: ' . $e->getHttpStatus());
                echo $e->getHttpBody();
            } else {
                echo $e->getMessage();
            }
        }
    }

    /**
     * 查询charge对象
     *
     */
    public function retrieve()
    {
        $charge_id = request()->param('charge_id'); // ch_WnfH8K9qfPW5vHWHqTX1SWH8
        try {
            $charge = \Pingpp\Charge::retrieve($charge_id);
            echo $charge;
            //
        } catch (\Pingpp\Error\Base $e) {
            if ($e->getHttpStatus() != null) {
                header('Status: ' . $e->getHttpStatus());
                echo $e->getHttpBody();
            } else {
                echo $e->getMessage();
            }
        }

    }

    /**
     * 撤销charge对象
     *
     */
    public function reverse(){
        $charge_id = request()->param('charge_id'); // ch_WnfH8K9qfPW5vHWHqTX1SWH8
        try {
            $charge = \Pingpp\Charge::reverse($charge_id);
            echo $charge;
            //
        } catch (\Pingpp\Error\Base $e) {
            if ($e->getHttpStatus() != null) {
                header('Status: ' . $e->getHttpStatus());
                echo $e->getHttpBody();
            } else {
                echo $e->getMessage();
            }
        }
    }
    /**
     * 创建商品订单
     *
     */
    public function order()
    {
        try{
            $order = \Pingpp\Order::create(
                array(
                    "amount" => 1,
                    "app" => 'app_Lij9KOXDa18OGG08',
                    "merchant_order_no" => "OR12346578", //商户订单号
                    "subject" => "subj",
                    "currency" => "cny",
                    "body" => "body",
                    "uid" => "test_user_001",
                    "client_ip" => $_SERVER['REMOTE_ADDR']
                )
            );
            echo $order;
        } catch (\Pingpp\Error\Base $e) {
            // 捕获报错信息
            if ($e->getHttpStatus() != null) {
                header('Status: ' . $e->getHttpStatus());
                echo $e->getHttpBody();
            } else {
                echo $e->getMessage();
            }
        }

    }

    /**
     * 取消商品订单
     *
     */
    public function cancel()
    {
        $order_id = request()->param('order_id'); // ch_WnfH8K9qfPW5vHWHqTX1SWH8
        try {
            $cancel = \Pingpp\Order::cancel($order_id);
            echo $cancel;
            //
        } catch (\Pingpp\Error\Base $e) {
            if ($e->getHttpStatus() != null) {
                header('Status: ' . $e->getHttpStatus());
                echo $e->getHttpBody();
            } else {
                echo $e->getMessage();
            }
        }
    }

    /**
     * 商品订单查询
     *
     */
    public function order_retrieve()
    {
        $order_id = request()->param('order_id'); // ch_WnfH8K9qfPW5vHWHqTX1SWH8
        try {
            $charge = \Pingpp\Order::retrieve($order_id);
            echo $charge;
            //
        } catch (\Pingpp\Error\Base $e) {
            if ($e->getHttpStatus() != null) {
                header('Status: ' . $e->getHttpStatus());
                echo $e->getHttpBody();
            } else {
                echo $e->getMessage();
            }
        }
    }

    /**
     * 商品订单支付
     *
     */
    public function order_pay()
    {
        // 订单号
        $order_id = request()->param('order_id');

        $order_type = request()->param('order_type/d', 1);
        // 获取订单信息
        if ($order_type === 1) {
            // 销售订单
            $rec_order = RecOrder::with('team')->where('id', $order_id)->find();
            $order_no = $rec_order['order_no'];
            $subject = '销售订单';
            $body = $rec_order['team']['company'] . $subject;
            $price = $rec_order['price'];
        } else {
            // 杂费订单
            $inc_order = IncidentalOrder::where('id', $order_id)->find();
            $order_no = $inc_order['order_no'];
            $subject = $inc_order['project'];
            $body = $inc_order['project'];
            $price = $inc_order['prcie'];
        }
        // 支付渠道
        $channel = request()->param('channel');
        // 创建Order对象
        try{
            $create_order = \Pingpp\Order::create(
                array(
                    "amount" => $price * 100,
                    "app" => $this->app_id,
                    "merchant_order_no" => $order_no, //商户订单号
                    "subject" => $subject,
                    "currency" => "cny",
                    "body" => $body,
                    "uid" => session('admin.id'),
                    "client_ip" => $_SERVER['REMOTE_ADDR']
                )
            );
            echo $create_order;
//            dump($create_order);die;
        } catch (\Pingpp\Error\Base $e) {
            // 捕获报错信息
            if ($e->getHttpStatus() != null) {
                header('Status: ' . $e->getHttpStatus());
                return json(['code' => 401, 'message' => $e->getHttpBody()]);
            } else {
                return json(['code' => 402, 'message' => $e->getMessage()]);
            }
        }

        // 支付
        $id = $create_order['id'];
        try{
            $order_pay = \Pingpp\Order::pay($id,
                array(
                    'charge_amount'     => $price * 100,
                    'channel' => $channel,
                )
            );
            echo $order_pay;
        } catch (\Pingpp\Error\Base $e) {
            // 捕获报错信息
            if ($e->getHttpStatus() != null) {
                header('Status: ' . $e->getHttpStatus());
                echo $e->getHttpBody();
            } else {
                echo $e->getMessage();
            }
        }
    }

}
